{"ast":null,"code":"var _jsxFileName = \"/Users/stefancoetzee/Documents/GitHub/supercluster/frontend/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport superclusterAPI from '../api/superclusterAPI';\n\n// Improved debounce function with a longer delay\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Get Mapbox token from .env file\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN || 'pk.eyJ1Ijoic2NvZXR6ZWUiLCJhIjoiY202N3RnZzZzMDgzZTJyczg4d3Z2NDhubiJ9.htvS1yoTXD2iSzSEz5Z5Fw';\nconst Map = ({\n  activeLayers,\n  filters\n}) => {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [lng, setLng] = useState(0);\n  const [lat, setLat] = useState(20);\n  const [zoom, setZoom] = useState(1);\n  const [showZoomNotice, setShowZoomNotice] = useState(true);\n  const [isMapIdle, setIsMapIdle] = useState(true); // Track if map is not being interacted with\n\n  // Initial map setup\n  useEffect(() => {\n    if (map.current) return; // Map already initialized\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-left');\n\n    // Add fullscreen control\n    map.current.addControl(new mapboxgl.FullscreenControl());\n\n    // Add scale\n    map.current.addControl(new mapboxgl.ScaleControl({\n      maxWidth: 200,\n      unit: 'metric'\n    }));\n\n    // Event handlers for map movement\n    map.current.on('move', () => {\n      setLng(parseFloat(map.current.getCenter().lng.toFixed(4)));\n      setLat(parseFloat(map.current.getCenter().lat.toFixed(4)));\n      setZoom(parseFloat(map.current.getZoom().toFixed(2)));\n      setIsMapIdle(false); // Map is moving, not idle\n    });\n\n    // Event handlers for map idle state\n    map.current.on('movestart', () => setIsMapIdle(false));\n    map.current.on('dragstart', () => setIsMapIdle(false));\n    map.current.on('zoomstart', () => setIsMapIdle(false));\n\n    // Map is idle when these events end and after a delay\n    const setMapIdle = debounce(() => setIsMapIdle(true), 100);\n    map.current.on('moveend', setMapIdle);\n    map.current.on('dragend', setMapIdle);\n    map.current.on('zoomend', setMapIdle);\n\n    // Initial load\n    map.current.on('load', () => {\n      // Add source for clusters with empty data initially\n      map.current.addSource('clusters', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        },\n        cluster: false // We handle clustering on the server\n      });\n\n      // Layer for clusters (circles)\n      map.current.addLayer({\n        id: 'clusters-circles',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['has', 'point_count'],\n        paint: {\n          'circle-color': ['step', ['get', 'point_count'], '#51bbd6',\n          // 0-20 points\n          20, '#f1f075',\n          // 20-100 points\n          100, '#f28cb1' // 100+ points\n          ],\n          'circle-radius': ['step', ['get', 'point_count'], 20,\n          // Base size\n          20, 25,\n          // 20-100 points\n          100, 30 // 100+ points\n          ],\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-opacity': 0.5\n        }\n      });\n\n      // Layer for cluster counts\n      map.current.addLayer({\n        id: 'cluster-counts',\n        type: 'symbol',\n        source: 'clusters',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        },\n        paint: {\n          'text-color': '#ffffff'\n        }\n      });\n\n      // Layer for individual points\n      map.current.addLayer({\n        id: 'unclustered-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for graduate points (separate visualization)\n      map.current.addLayer({\n        id: 'graduate-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', ['!', ['has', 'point_count']], ['==', ['get', 'is_graduate_learner'], true]],\n        paint: {\n          'circle-color': '#4caf50',\n          // Green for graduates\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for featured points (separate visualization)\n      map.current.addLayer({\n        id: 'featured-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', ['!', ['has', 'point_count']], ['==', ['get', 'is_featured'], true]],\n        paint: {\n          'circle-color': '#ff9800',\n          // Orange for featured\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for entrepreneurs (separate visualization)\n      map.current.addLayer({\n        id: 'entrepreneur-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', ['!', ['has', 'point_count']], ['==', ['get', 'is_running_a_venture'], true]],\n        paint: {\n          'circle-color': '#9c27b0',\n          // Purple for entrepreneurs\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Add popup on click (for unclustered points)\n      map.current.on('click', 'unclustered-points', e => {\n        if (!e.features || e.features.length === 0) return;\n        const feature = e.features[0];\n        const coordinates = feature.geometry.coordinates.slice();\n        const properties = feature.properties;\n\n        // Create HTML content for popup\n        const popupContent = `\n          <h3>${properties.full_name || 'Anonymous'}</h3>\n          <p><strong>Country:</strong> ${properties.country_of_residence || 'Unknown'}</p>\n          <p><strong>Gender:</strong> ${properties.gender || 'Unknown'}</p>\n          <p><strong>Graduate:</strong> ${properties.is_graduate_learner ? 'Yes' : 'No'}</p>\n          <p><strong>Employed:</strong> ${properties.is_wage_employed ? 'Yes' : 'No'}</p>\n          <p><strong>Entrepreneur:</strong> ${properties.is_running_a_venture ? 'Yes' : 'No'}</p>\n          ${properties.is_featured ? '<p><strong>‚≠ê Featured</strong></p>' : ''}\n        `;\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML(popupContent).addTo(map.current);\n      });\n\n      // Click on a cluster to zoom in\n      map.current.on('click', 'clusters-circles', e => {\n        if (!e.features || e.features.length === 0) return;\n        const feature = e.features[0];\n        // Get expansion zoom if available, otherwise zoom in by 2 levels\n        const expansionZoom = feature.properties.expansion_zoom || map.current.getZoom() + 2;\n        map.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom: expansionZoom\n        });\n      });\n\n      // Change cursor to pointer when hovering over clusters or points\n      map.current.on('mouseenter', 'clusters-circles', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'clusters-circles', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n      map.current.on('mouseenter', 'unclustered-points', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'unclustered-points', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n\n      // Initial data fetch - this will be handled by the useEffect for filters\n    });\n  }, [lng, lat, zoom]);\n\n  // Update layers visibility based on active layers\n  useEffect(() => {\n    if (!map.current || !map.current.loaded()) return;\n\n    // Core cluster layers are always visible\n    const clusterLayers = ['clusters-circles', 'cluster-counts'];\n\n    // Point layers that can be toggled\n    const pointLayers = ['unclustered-points', 'featured-points', 'graduate-points', 'entrepreneur-points'];\n\n    // First, make all cluster layers visible\n    clusterLayers.forEach(layerId => {\n      map.current.setLayoutProperty(layerId, 'visibility', 'visible');\n    });\n\n    // Then handle the specific point layers based on active selection\n    pointLayers.forEach(layerId => {\n      // By default, hide all point layers\n      let visibility = 'none';\n\n      // If 'all-points' is active, show only the unclustered-points layer\n      if (activeLayers.includes('all-points') && layerId === 'unclustered-points') {\n        visibility = 'visible';\n      }\n      // If 'featured-points' is active, show only the featured-points layer\n      else if (activeLayers.includes('featured-points') && layerId === 'featured-points') {\n        visibility = 'visible';\n      }\n      map.current.setLayoutProperty(layerId, 'visibility', visibility);\n    });\n  }, [activeLayers]);\n\n  // Fetch clusters when filters change or map moves - memoized with useCallback\n  const fetchClusters = useCallback(async () => {\n    if (!map.current || !map.current.loaded()) return;\n    const currentZoom = Math.round(map.current.getZoom());\n\n    // For very low zoom levels, limit data fetching to prevent crashes\n    if (currentZoom < 2) {\n      setShowZoomNotice(true);\n      return;\n    } else {\n      setShowZoomNotice(false);\n    }\n    setLoading(true);\n    try {\n      const bounds = map.current.getBounds();\n      const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()];\n\n      // Single API call with filters\n      const clustersResponse = await superclusterAPI.getClusters(bbox, currentZoom, filters);\n\n      // Update the GeoJSON source with new data\n      if (map.current.getSource('clusters')) {\n        map.current.getSource('clusters').setData({\n          type: 'FeatureCollection',\n          features: clustersResponse.features\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching clusters:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters, setLoading]);\n\n  // Create a heavily debounced version of fetchClusters to limit API calls during interaction\n  const debouncedFetchClusters = useCallback(debounce(() => {\n    fetchClusters();\n  }, 800),\n  // Longer debounce time to prevent excessive API calls\n  [fetchClusters]);\n\n  // Fetch data when the map becomes idle after movement\n  useEffect(() => {\n    if (isMapIdle && map.current && map.current.loaded() && zoom >= 2) {\n      debouncedFetchClusters();\n    }\n  }, [isMapIdle, zoom, debouncedFetchClusters]);\n\n  // Fetch data when filters change, but only if map is ready\n  useEffect(() => {\n    if (map.current && map.current.loaded() && zoom >= 2) {\n      debouncedFetchClusters();\n    }\n  }, [filters, debouncedFetchClusters, zoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), showZoomNotice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-notice\",\n      children: \"Please zoom in to see data points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Longitude: \", lng, \"\\xB0 | Latitude: \", lat, \"\\xB0 | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"QKHp1pUTBB9GMFDD525x2wCl3uI=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","mapboxgl","superclusterAPI","jsxDEV","_jsxDEV","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","accessToken","process","env","REACT_APP_MAPBOX_ACCESS_TOKEN","Map","activeLayers","filters","_s","mapContainer","map","loading","setLoading","lng","setLng","lat","setLat","zoom","setZoom","showZoomNotice","setShowZoomNotice","isMapIdle","setIsMapIdle","current","container","style","center","addControl","NavigationControl","FullscreenControl","ScaleControl","maxWidth","unit","on","parseFloat","getCenter","toFixed","getZoom","setMapIdle","addSource","type","data","features","cluster","addLayer","id","source","filter","paint","layout","e","length","feature","coordinates","geometry","slice","properties","popupContent","full_name","country_of_residence","gender","is_graduate_learner","is_wage_employed","is_running_a_venture","is_featured","Math","abs","lngLat","Popup","setLngLat","setHTML","addTo","expansionZoom","expansion_zoom","easeTo","getCanvas","cursor","loaded","clusterLayers","pointLayers","forEach","layerId","setLayoutProperty","visibility","includes","fetchClusters","currentZoom","round","bounds","getBounds","bbox","getWest","getSouth","getEast","getNorth","clustersResponse","getClusters","getSource","setData","error","console","debouncedFetchClusters","className","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stefancoetzee/Documents/GitHub/supercluster/frontend/src/components/Map.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport superclusterAPI from '../api/superclusterAPI';\n\n// Improved debounce function with a longer delay\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Get Mapbox token from .env file\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN || 'pk.eyJ1Ijoic2NvZXR6ZWUiLCJhIjoiY202N3RnZzZzMDgzZTJyczg4d3Z2NDhubiJ9.htvS1yoTXD2iSzSEz5Z5Fw';\n\nconst Map = ({ activeLayers, filters }) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [lng, setLng] = useState(0);\n  const [lat, setLat] = useState(20);\n  const [zoom, setZoom] = useState(1);\n  const [showZoomNotice, setShowZoomNotice] = useState(true);\n  const [isMapIdle, setIsMapIdle] = useState(true); // Track if map is not being interacted with\n\n  // Initial map setup\n  useEffect(() => {\n    if (map.current) return; // Map already initialized\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-left');\n    \n    // Add fullscreen control\n    map.current.addControl(new mapboxgl.FullscreenControl());\n\n    // Add scale\n    map.current.addControl(new mapboxgl.ScaleControl({ maxWidth: 200, unit: 'metric' }));\n\n    // Event handlers for map movement\n    map.current.on('move', () => {\n      setLng(parseFloat(map.current.getCenter().lng.toFixed(4)));\n      setLat(parseFloat(map.current.getCenter().lat.toFixed(4)));\n      setZoom(parseFloat(map.current.getZoom().toFixed(2)));\n      setIsMapIdle(false); // Map is moving, not idle\n    });\n\n    // Event handlers for map idle state\n    map.current.on('movestart', () => setIsMapIdle(false));\n    map.current.on('dragstart', () => setIsMapIdle(false));\n    map.current.on('zoomstart', () => setIsMapIdle(false));\n    \n    // Map is idle when these events end and after a delay\n    const setMapIdle = debounce(() => setIsMapIdle(true), 100);\n    map.current.on('moveend', setMapIdle);\n    map.current.on('dragend', setMapIdle);\n    map.current.on('zoomend', setMapIdle);\n\n    // Initial load\n    map.current.on('load', () => {\n      // Add source for clusters with empty data initially\n      map.current.addSource('clusters', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        },\n        cluster: false // We handle clustering on the server\n      });\n\n      // Layer for clusters (circles)\n      map.current.addLayer({\n        id: 'clusters-circles',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['has', 'point_count'],\n        paint: {\n          'circle-color': [\n            'step',\n            ['get', 'point_count'],\n            '#51bbd6', // 0-20 points\n            20,\n            '#f1f075', // 20-100 points\n            100,\n            '#f28cb1' // 100+ points\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'point_count'],\n            20, // Base size\n            20,\n            25, // 20-100 points\n            100,\n            30 // 100+ points\n          ],\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-opacity': 0.5\n        }\n      });\n\n      // Layer for cluster counts\n      map.current.addLayer({\n        id: 'cluster-counts',\n        type: 'symbol',\n        source: 'clusters',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        },\n        paint: {\n          'text-color': '#ffffff'\n        }\n      });\n\n      // Layer for individual points\n      map.current.addLayer({\n        id: 'unclustered-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for graduate points (separate visualization)\n      map.current.addLayer({\n        id: 'graduate-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', \n          ['!', ['has', 'point_count']], \n          ['==', ['get', 'is_graduate_learner'], true]\n        ],\n        paint: {\n          'circle-color': '#4caf50', // Green for graduates\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for featured points (separate visualization)\n      map.current.addLayer({\n        id: 'featured-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', \n          ['!', ['has', 'point_count']], \n          ['==', ['get', 'is_featured'], true]\n        ],\n        paint: {\n          'circle-color': '#ff9800', // Orange for featured\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Layer for entrepreneurs (separate visualization)\n      map.current.addLayer({\n        id: 'entrepreneur-points',\n        type: 'circle',\n        source: 'clusters',\n        filter: ['all', \n          ['!', ['has', 'point_count']], \n          ['==', ['get', 'is_running_a_venture'], true]\n        ],\n        paint: {\n          'circle-color': '#9c27b0', // Purple for entrepreneurs\n          'circle-radius': 6,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      // Add popup on click (for unclustered points)\n      map.current.on('click', 'unclustered-points', (e) => {\n        if (!e.features || e.features.length === 0) return;\n        \n        const feature = e.features[0];\n        const coordinates = feature.geometry.coordinates.slice();\n        const properties = feature.properties;\n        \n        // Create HTML content for popup\n        const popupContent = `\n          <h3>${properties.full_name || 'Anonymous'}</h3>\n          <p><strong>Country:</strong> ${properties.country_of_residence || 'Unknown'}</p>\n          <p><strong>Gender:</strong> ${properties.gender || 'Unknown'}</p>\n          <p><strong>Graduate:</strong> ${properties.is_graduate_learner ? 'Yes' : 'No'}</p>\n          <p><strong>Employed:</strong> ${properties.is_wage_employed ? 'Yes' : 'No'}</p>\n          <p><strong>Entrepreneur:</strong> ${properties.is_running_a_venture ? 'Yes' : 'No'}</p>\n          ${properties.is_featured ? '<p><strong>‚≠ê Featured</strong></p>' : ''}\n        `;\n        \n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n        \n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(popupContent)\n          .addTo(map.current);\n      });\n      \n      // Click on a cluster to zoom in\n      map.current.on('click', 'clusters-circles', (e) => {\n        if (!e.features || e.features.length === 0) return;\n        \n        const feature = e.features[0];\n        // Get expansion zoom if available, otherwise zoom in by 2 levels\n        const expansionZoom = feature.properties.expansion_zoom || (map.current.getZoom() + 2);\n        \n        map.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom: expansionZoom\n        });\n      });\n\n      // Change cursor to pointer when hovering over clusters or points\n      map.current.on('mouseenter', 'clusters-circles', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      \n      map.current.on('mouseleave', 'clusters-circles', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n      \n      map.current.on('mouseenter', 'unclustered-points', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      \n      map.current.on('mouseleave', 'unclustered-points', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n\n      // Initial data fetch - this will be handled by the useEffect for filters\n    });\n\n  }, [lng, lat, zoom]);\n\n  // Update layers visibility based on active layers\n  useEffect(() => {\n    if (!map.current || !map.current.loaded()) return;\n\n    // Core cluster layers are always visible\n    const clusterLayers = [\n      'clusters-circles',\n      'cluster-counts'\n    ];\n    \n    // Point layers that can be toggled\n    const pointLayers = [\n      'unclustered-points',\n      'featured-points',\n      'graduate-points',\n      'entrepreneur-points'\n    ];\n    \n    // First, make all cluster layers visible\n    clusterLayers.forEach(layerId => {\n      map.current.setLayoutProperty(layerId, 'visibility', 'visible');\n    });\n    \n    // Then handle the specific point layers based on active selection\n    pointLayers.forEach(layerId => {\n      // By default, hide all point layers\n      let visibility = 'none';\n      \n      // If 'all-points' is active, show only the unclustered-points layer\n      if (activeLayers.includes('all-points') && layerId === 'unclustered-points') {\n        visibility = 'visible';\n      }\n      // If 'featured-points' is active, show only the featured-points layer\n      else if (activeLayers.includes('featured-points') && layerId === 'featured-points') {\n        visibility = 'visible';\n      }\n      \n      map.current.setLayoutProperty(layerId, 'visibility', visibility);\n    });\n  }, [activeLayers]);\n\n  // Fetch clusters when filters change or map moves - memoized with useCallback\n  const fetchClusters = useCallback(async () => {\n    if (!map.current || !map.current.loaded()) return;\n    \n    const currentZoom = Math.round(map.current.getZoom());\n    \n    // For very low zoom levels, limit data fetching to prevent crashes\n    if (currentZoom < 2) {\n      setShowZoomNotice(true);\n      return;\n    } else {\n      setShowZoomNotice(false);\n    }\n    \n    setLoading(true);\n    try {\n      const bounds = map.current.getBounds();\n      const bbox = [\n        bounds.getWest(),  \n        bounds.getSouth(),\n        bounds.getEast(),  \n        bounds.getNorth() \n      ];\n      \n      // Single API call with filters\n      const clustersResponse = await superclusterAPI.getClusters(\n        bbox,\n        currentZoom,\n        filters\n      );\n      \n      // Update the GeoJSON source with new data\n      if (map.current.getSource('clusters')) {\n        map.current.getSource('clusters').setData({\n          type: 'FeatureCollection',\n          features: clustersResponse.features\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching clusters:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters, setLoading]);\n\n  // Create a heavily debounced version of fetchClusters to limit API calls during interaction\n  const debouncedFetchClusters = useCallback(\n    debounce(() => {\n      fetchClusters();\n    }, 800), // Longer debounce time to prevent excessive API calls\n    [fetchClusters]\n  );\n\n  // Fetch data when the map becomes idle after movement\n  useEffect(() => {\n    if (isMapIdle && map.current && map.current.loaded() && zoom >= 2) {\n      debouncedFetchClusters();\n    }\n  }, [isMapIdle, zoom, debouncedFetchClusters]);\n\n  // Fetch data when filters change, but only if map is ready\n  useEffect(() => {\n    if (map.current && map.current.loaded() && zoom >= 2) {\n      debouncedFetchClusters();\n    }\n  }, [filters, debouncedFetchClusters, zoom]);\n\n  return (\n    <div className=\"map-wrapper\">\n      <div ref={mapContainer} className=\"map-container\" style={{ width: '100%', height: '100%' }} />\n      {loading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n        </div>\n      )}\n      {showZoomNotice && (\n        <div className=\"zoom-notice\">\n          Please zoom in to see data points\n        </div>\n      )}\n      <div className=\"map-info\">\n        <span>Longitude: {lng}¬∞ | Latitude: {lat}¬∞ | Zoom: {zoom}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}