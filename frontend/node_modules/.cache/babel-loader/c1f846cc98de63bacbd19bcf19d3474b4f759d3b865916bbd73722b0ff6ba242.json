{"ast":null,"code":"/**\n * Shared constants for field mappings and filter definitions\n */\n\n// Mapping between database field names and GeoJSON property names\nexport const FIELD_MAPPING = {\n  // Database field name -> GeoJSON property name\n  'is_graduate_learner': 'is_graduate',\n  'is_wage_employed': 'is_employed',\n  'is_running_a_venture': 'is_entrepreneur',\n  'is_featured': 'is_featured',\n  'is_featured_video': 'has_video',\n  'country_of_residence': 'country',\n  'gender': 'gender'\n};\n\n// Reverse mapping for convenience\nexport const REVERSE_FIELD_MAPPING = Object.entries(FIELD_MAPPING).reduce(_c = (acc, [k, v]) => ({\n  ...acc,\n  [v]: k\n}), {});\n\n// Filter types\n_c2 = REVERSE_FIELD_MAPPING;\nexport const FILTER_TYPES = {\n  string_filters: ['gender', 'country_of_residence'],\n  boolean_filters: ['is_graduate_learner', 'is_wage_employed', 'is_running_a_venture', 'is_featured', 'is_featured_video']\n};\n\n// Filter display names (for UI)\nexport const FILTER_DISPLAY_NAMES = {\n  'is_graduate_learner': 'Graduate',\n  'is_wage_employed': 'Employed',\n  'is_running_a_venture': 'Entrepreneur',\n  'is_featured': 'Featured',\n  'is_featured_video': 'Has Video',\n  'country_of_residence': 'Country',\n  'gender': 'Gender'\n};\n\n// Cluster visualization settings\nexport const CLUSTER_SETTINGS = {\n  small: {\n    maxPoints: 20,\n    color: '#002b56',\n    // Light blue\n    radius: 20\n  },\n  medium: {\n    maxPoints: 100,\n    color: '#002b56',\n    // Yellow\n    radius: 25\n  },\n  large: {\n    color: '#002b56',\n    // Pink\n    radius: 30\n  },\n  stroke: {\n    width: 2,\n    color: '#fff',\n    opacity: 0.5\n  }\n};\n\n// Layer definitions for map visualization\nexport const LAYER_DEFINITIONS = {\n  'graduate-points': {\n    filter_field: 'is_graduate_learner',\n    color: '#4caf50',\n    // Green for graduates\n    radius: 6\n  },\n  'featured-points': {\n    filter_field: 'is_featured',\n    color: '#ff9800',\n    // Orange for featured\n    radius: 6\n  },\n  'entrepreneur-points': {\n    filter_field: 'is_running_a_venture',\n    color: '#9c27b0',\n    // Purple for entrepreneurs\n    radius: 6\n  },\n  'unclustered-points': {\n    color: '#11b4da',\n    // Light blue for regular points\n    radius: 6\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"REVERSE_FIELD_MAPPING$Object.entries(FIELD_MAPPING).reduce\");\n$RefreshReg$(_c2, \"REVERSE_FIELD_MAPPING\");","map":{"version":3,"names":["FIELD_MAPPING","REVERSE_FIELD_MAPPING","Object","entries","reduce","_c","acc","k","v","_c2","FILTER_TYPES","string_filters","boolean_filters","FILTER_DISPLAY_NAMES","CLUSTER_SETTINGS","small","maxPoints","color","radius","medium","large","stroke","width","opacity","LAYER_DEFINITIONS","filter_field","$RefreshReg$"],"sources":["/Users/stefancoetzee/Documents/GitHub/supercluster/frontend/src/constants.js"],"sourcesContent":["/**\n * Shared constants for field mappings and filter definitions\n */\n\n// Mapping between database field names and GeoJSON property names\nexport const FIELD_MAPPING = {\n    // Database field name -> GeoJSON property name\n    'is_graduate_learner': 'is_graduate',\n    'is_wage_employed': 'is_employed',\n    'is_running_a_venture': 'is_entrepreneur',\n    'is_featured': 'is_featured',\n    'is_featured_video': 'has_video',\n    'country_of_residence': 'country',\n    'gender': 'gender'\n};\n\n// Reverse mapping for convenience\nexport const REVERSE_FIELD_MAPPING = Object.entries(FIELD_MAPPING).reduce(\n    (acc, [k, v]) => ({ ...acc, [v]: k }),\n    {}\n);\n\n// Filter types\nexport const FILTER_TYPES = {\n    string_filters: ['gender', 'country_of_residence'],\n    boolean_filters: ['is_graduate_learner', 'is_wage_employed', \n                     'is_running_a_venture', 'is_featured', 'is_featured_video']\n};\n\n// Filter display names (for UI)\nexport const FILTER_DISPLAY_NAMES = {\n    'is_graduate_learner': 'Graduate',\n    'is_wage_employed': 'Employed',\n    'is_running_a_venture': 'Entrepreneur',\n    'is_featured': 'Featured',\n    'is_featured_video': 'Has Video',\n    'country_of_residence': 'Country',\n    'gender': 'Gender'\n};\n\n// Cluster visualization settings\nexport const CLUSTER_SETTINGS = {\n    small: {\n        maxPoints: 20,\n        color: '#002b56', // Light blue\n        radius: 20\n    },\n    medium: {\n        maxPoints: 100,\n        color: '#002b56', // Yellow\n        radius: 25\n    },\n    large: {\n        color: '#002b56', // Pink\n        radius: 30\n    },\n    stroke: {\n        width: 2,\n        color: '#fff',\n        opacity: 0.5\n    }\n};\n\n// Layer definitions for map visualization\nexport const LAYER_DEFINITIONS = {\n    'graduate-points': {\n        filter_field: 'is_graduate_learner',\n        color: '#4caf50', // Green for graduates\n        radius: 6\n    },\n    'featured-points': {\n        filter_field: 'is_featured',\n        color: '#ff9800', // Orange for featured\n        radius: 6\n    },\n    'entrepreneur-points': {\n        filter_field: 'is_running_a_venture',\n        color: '#9c27b0', // Purple for entrepreneurs\n        radius: 6\n    },\n    'unclustered-points': {\n        color: '#11b4da', // Light blue for regular points\n        radius: 6\n    }\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG;EACzB;EACA,qBAAqB,EAAE,aAAa;EACpC,kBAAkB,EAAE,aAAa;EACjC,sBAAsB,EAAE,iBAAiB;EACzC,aAAa,EAAE,aAAa;EAC5B,mBAAmB,EAAE,WAAW;EAChC,sBAAsB,EAAE,SAAS;EACjC,QAAQ,EAAE;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,qBAAqB,GAAGC,MAAM,CAACC,OAAO,CAACH,aAAa,CAAC,CAACI,MAAM,CAAAC,EAAA,GACrEA,CAACC,GAAG,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC,MAAM;EAAE,GAAGF,GAAG;EAAE,CAACE,CAAC,GAAGD;AAAE,CAAC,CAAC,EACrC,CAAC,CACL,CAAC;;AAED;AAAAE,GAAA,GALaR,qBAAqB;AAMlC,OAAO,MAAMS,YAAY,GAAG;EACxBC,cAAc,EAAE,CAAC,QAAQ,EAAE,sBAAsB,CAAC;EAClDC,eAAe,EAAE,CAAC,qBAAqB,EAAE,kBAAkB,EAC1C,sBAAsB,EAAE,aAAa,EAAE,mBAAmB;AAC/E,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAG;EAChC,qBAAqB,EAAE,UAAU;EACjC,kBAAkB,EAAE,UAAU;EAC9B,sBAAsB,EAAE,cAAc;EACtC,aAAa,EAAE,UAAU;EACzB,mBAAmB,EAAE,WAAW;EAChC,sBAAsB,EAAE,SAAS;EACjC,QAAQ,EAAE;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,KAAK,EAAE;IACHC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE;IACJH,SAAS,EAAE,GAAG;IACdC,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACDE,KAAK,EAAE;IACHH,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACDG,MAAM,EAAE;IACJC,KAAK,EAAE,CAAC;IACRL,KAAK,EAAE,MAAM;IACbM,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG;EAC7B,iBAAiB,EAAE;IACfC,YAAY,EAAE,qBAAqB;IACnCR,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACD,iBAAiB,EAAE;IACfO,YAAY,EAAE,aAAa;IAC3BR,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACD,qBAAqB,EAAE;IACnBO,YAAY,EAAE,sBAAsB;IACpCR,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ,CAAC;EACD,oBAAoB,EAAE;IAClBD,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE;EACZ;AACJ,CAAC;AAAC,IAAAb,EAAA,EAAAI,GAAA;AAAAiB,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAjB,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}